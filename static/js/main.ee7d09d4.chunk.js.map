{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Skills.js","components/ContactMe.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","Fragment","id","className","href","title","name","style","color","fontFamily","role","roleDescription","socialLinks","map","item","key","url","target","Component","About","src","alt","aboutme","address","website","Resume","education","UniversityName","specialization","MonthOfPassing","YearOfPassing","Achievements","work","companyName","monthOfLeaving","YearOfLeaving","skillsDescription","skills","skillname","toLowerCase","ContactUs","linkedinId","emailAddress","Footer","socialMedia","imagebaseurl","yearOfLeaving","portfolio","description","imgurl","testimonials","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee7d09d4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nexport default class Header extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <React.Fragment>\r\n        <header id=\"home\">\r\n          <nav id=\"nav-wrap\">\r\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\r\n              Show navigation\r\n            </a>\r\n            <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">\r\n              Hide navigation\r\n            </a>\r\n            <ul id=\"nav\" className=\"nav\">\r\n              <li className=\"current\">\r\n                <a className=\"smoothscroll\" href=\"#home\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a className=\"smoothscroll\" href=\"#about\">\r\n                  About\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a className=\"smoothscroll\" href=\"#resume\">\r\n                  Resume\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a className=\"smoothscroll\" href=\"#portfolio\">\r\n                  Works\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a className=\"smoothscroll\" href=\"#skills\">\r\n                  Skills\r\n                </a>\r\n              </li>\r\n              {/*<li>\r\n                <a className=\"smoothscroll\" href=\"#testimonials\">\r\n                  Testimonials\r\n                </a>\r\n              </li>*/}\r\n              <li>\r\n                <a className=\"smoothscroll\" href=\"#contact\">\r\n                  Contact\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n\r\n          <div className=\"row banner\">\r\n            <div className=\"banner-text\">\r\n              <h1 className=\"responsive-headline\">{resumeData.name}.</h1>\r\n              <h2 style={{ color: \"#fff\", fontFamily: \"sans-serif \" }}>\r\n                I am a {resumeData.role}\r\n              </h2>\r\n              <h3>{resumeData.roleDescription}</h3>\r\n              <hr />\r\n              <ul className=\"social\">\r\n                {resumeData.socialLinks &&\r\n                  resumeData.socialLinks.map(item => {\r\n                    return (\r\n                      <li key={item.name}>\r\n                        <a href={item.url} target=\"_blank\">\r\n                          <i className={item.className}></i>\r\n                        </a>\r\n                      </li>\r\n                    );\r\n                  })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          <p className=\"scrolldown\">\r\n            <a className=\"smoothscroll\" href=\"#about\">\r\n              <i className=\"icon-down-circle\"></i>\r\n            </a>\r\n          </p>\r\n        </header>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nexport default class About extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <section id=\"about\">\r\n        <div className=\"row\">\r\n          <div className=\"three columns\">\r\n            <img className=\"profile-pic\" src=\"images/profilepic.jpg\" alt=\"\" />\r\n          </div>\r\n\r\n          <div className=\"nine columns main-col\">\r\n            <h2>About Me</h2>\r\n            <p>{resumeData.aboutme}</p>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"columns contact-details\">\r\n                <h2>Contact Details</h2>\r\n                <p className=\"address\">\r\n                  // <span>{resumeData.name}</span>\r\n                  <br></br>\r\n                  <span>{resumeData.address}</span>\r\n                  <br></br>\r\n                  <a>{resumeData.website}</a>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nexport default class Resume extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <section id=\"resume\">\r\n        <div className=\"row education\">\r\n          <div className=\"three columns header-col\">\r\n            <h1>\r\n              <span>Education</span>\r\n            </h1>\r\n          </div>\r\n\r\n          <div className=\"nine columns main-col\">\r\n            {resumeData.education &&\r\n              resumeData.education.map(item => {\r\n                return (\r\n                  <div className=\"row item\">\r\n                    <div className=\"twelve columns\">\r\n                      <h3>{item.UniversityName}</h3>\r\n                      <p className=\"info\">\r\n                        {item.specialization}\r\n                        <span>&bull;</span>{\" \"}\r\n                        <em className=\"date\">\r\n                          {item.MonthOfPassing} {item.YearOfPassing}\r\n                        </em>\r\n                      </p>\r\n                      <p>{item.Achievements}</p>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row work\">\r\n          <div className=\"three columns header-col\">\r\n            <h1>\r\n              <span>Work</span>\r\n            </h1>\r\n          </div>\r\n\r\n          <div className=\"nine columns main-col\">\r\n            {resumeData.work &&\r\n              resumeData.work.map(item => {\r\n                return (\r\n                  <div className=\"row item\">\r\n                    <div className=\"twelve columns\">\r\n                      <h3>{item.companyName}</h3>\r\n                      <p className=\"info\">\r\n                        {item.specialization}\r\n                        <span>&bull;</span>{\" \"}\r\n                        <em className=\"date\">\r\n                          {item.monthOfLeaving} {item.YearOfLeaving}\r\n                        </em>\r\n                      </p>\r\n                      <p>{item.Achievements}</p>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nexport default class Resume extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <section id=\"skills\">\r\n        <div className=\"row skill\">\r\n          <div className=\"three columns header-col\">\r\n            <h1>\r\n              <span>Skills</span>\r\n            </h1>\r\n          </div>\r\n\r\n          <div className=\"nine columns main-col\">\r\n            <p>{resumeData.skillsDescription}</p>\r\n\r\n            <div className=\"bars\">\r\n              <ul className=\"skills\">\r\n                {resumeData.skills &&\r\n                  resumeData.skills.map(item => {\r\n                    return (\r\n                      <li>\r\n                        <span\r\n                          className={`bar-expand ${item.skillname.toLowerCase()}`}\r\n                        ></span>\r\n                        <em>{item.skillname}</em>\r\n                      </li>\r\n                    );\r\n                  })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nexport default class ContactUs extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <section id=\"contact\">\r\n        <div className=\"row section-head\">\r\n          <div className=\"ten columns\">\r\n            <p className=\"lead\">\r\n              Feel free to contact me for any work or suggestions below\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <aside className=\"eigth columns footer-widgets\">\r\n            <div className=\"widget\">\r\n              <h4>LinkedIn: {resumeData.linkedinId}</h4>\r\n              <h4>Email: {resumeData.emailAddress}</h4>\r\n            </div>\r\n          </aside>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nexport default class Footer extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <footer id=\"footer\">\r\n        <div className=\"row\">\r\n          <div className=\"twelve columns\">\r\n            <ul className=\"social-links\">\r\n              {resumeData.socialMedia &&\r\n                resumeData.socialMedia.map(item => {\r\n                  return (\r\n                    <li>\r\n                      <a href={item.url}>\r\n                        <i className={item.className} />\r\n                      </a>\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </div>\r\n          <div id=\"go-top\">\r\n            <a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\">\r\n              <i className=\"icon-up-open\" />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n","let resumeData = {\r\n  imagebaseurl: \"kodeman14.github.io/\",\r\n  name: \"Ankit Curchorcar\",\r\n  role: \"Software Developer and Consultant\",\r\n  linkedinId: \"linkedin.com/in/ankyc\",\r\n  emailAddress: \"ankit.curchorcar@gmail.com\",\r\n  // \"skypeId\": \"cranky.14x\",\r\n  roleDescription: \"\",\r\n  socialMedia: [\r\n    {\r\n      name: \"linkedin\",\r\n      url: \"linkedin.com/in/ankyc\",\r\n      className: \"fa fa-linkedin\"\r\n    },\r\n    {\r\n      name: \"github\",\r\n      url: \"github.com/kodeman14\",\r\n      className: \"fa fa-github\"\r\n    },\r\n    {\r\n      name: \"twitter\",\r\n      url: \"http://twitter.com/ankyc14\",\r\n      className: \"fa fa-twitter\"\r\n    }\r\n  ],\r\n  aboutme:\r\n    \"Fully Stacked Developer emphasizing on good coding and design principles, with professional expertise in Web development and Agile process frameworks!\",\r\n  address: \"Toronto, Ontario, Canada\",\r\n  website: \"about.me/ankyc\",\r\n  education: [\r\n    {\r\n      UniversityName: \"University of Waterloo\",\r\n      specialization: \"Mathematics\",\r\n      MonthOfPassing: \"August\",\r\n      YearOfPassing: \"2020\",\r\n      Achievements: \"Some Achievements\"\r\n    },\r\n    {\r\n      UniversityName: \"University of Toronto\",\r\n      specialization: \"Some specialization\",\r\n      MonthOfPassing: \"Jan\",\r\n      YearOfPassing: \"2018\",\r\n      Achievements: \"Some Achievements\"\r\n    }\r\n  ],\r\n  work: [\r\n    {\r\n      companyName: \"Some Company\",\r\n      specialization: \"Some specialization\",\r\n      monthOfLeaving: \"Jan\",\r\n      yearOfLeaving: \"2018\",\r\n      Achievements: \"Some Achievements\"\r\n    }\r\n  ],\r\n  skillsDescription: \"Fully Stacked\",\r\n  skills: [\r\n    {\r\n      skillname: \"HTML5\"\r\n    },\r\n    {\r\n      skillname: \"CSS\"\r\n    },\r\n    {\r\n      skillname: \"Reactjs\"\r\n    }\r\n  ],\r\n  portfolio: [\r\n    {\r\n      name: \"project1\",\r\n      description: \"mobileapp\",\r\n      imgurl: \"images/portfolio/phone.jpg\"\r\n    },\r\n    {\r\n      name: \"project2\",\r\n      description: \"mobileapp\",\r\n      imgurl: \"images/portfolio/project.jpg\"\r\n    },\r\n    {\r\n      name: \"project3\",\r\n      description: \"mobileapp\",\r\n      imgurl: \"images/portfolio/project2.png\"\r\n    },\r\n    {\r\n      name: \"project4\",\r\n      description: \"mobileapp\",\r\n      imgurl: \"images/portfolio/phone.jpg\"\r\n    }\r\n  ],\r\n  testimonials: [\r\n    {\r\n      description: \"This is a sample testimonial\",\r\n      name: \"Some technical guy\"\r\n    },\r\n    {\r\n      description: \"This is a sample testimonial\",\r\n      name: \"Some technical guy\"\r\n    }\r\n  ]\r\n};\r\n\r\nexport default resumeData;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport About from \"./components/About\";\r\nimport Resume from \"./components/Resume\";\r\nimport Skills from \"./components/Skills\";\r\n// import Portfolio from \"./components/Portfolio\";\r\n// import Testimonials from \"./components/Testimonials\";\r\nimport ContactMe from \"./components/ContactMe\";\r\nimport Footer from \"./components/Footer\";\r\nimport resumeData from \"./resumeData\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header resumeData={resumeData} />\r\n        <About resumeData={resumeData} />\r\n        <Resume resumeData={resumeData} />\r\n        <Skills resumeData={resumeData} />\r\n        <ContactMe resumeData={resumeData} />\r\n        <Footer resumeData={resumeData} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n// <Testimonials resumeData={resumeData}/>\r\n// <Portfolio resumeData={resumeData}/>\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}